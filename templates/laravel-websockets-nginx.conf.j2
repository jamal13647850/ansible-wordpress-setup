{# templates/laravel-websockets-nginx.conf.j2 - Refactored for single domain_config #}
# WebSockets Server
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close; #
}

server {
    # This server block is for the WebSocket service itself, typically on a different port.
    # If you want to proxy WebSockets through the main domain (e.g. /app),
    # that configuration should be part of the main laravel-nginx.conf.j2 or laravel-octane-nginx.conf.j2.
    # This assumes the WebSocket server listens on _websockets_service_port (e.g., 6001)
    # and Nginx proxies requests to it.
    # The original template listened on port 6001 without SSL for HTTP and 6001 with SSL for HTTPS.
    # Usually, you'd have the WebSocket application listen on a local port (e.g., 127.0.0.1:6001)
    # and then your main Nginx config (listening on 80/443) would proxy a specific path (e.g., /ws) to it.
    # The structure below is kept similar to the original, but it's unusual to expose 6001 directly
    # with its own SSL if the main site is already on 443.
    #
    # Recommendation: Integrate WebSocket proxy into the main domain's Nginx config on port 443
    # using a location block like:
    # location /app { # Or your chosen path for websockets
    #     proxy_pass http://127.0.0.1:{{ domain_config.websockets_service_port | default(6001) }};
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    # }
    #
    # The following keeps the original structure of listening on port 6001.
    # It's assumed that this config file is for a SEPARATE Nginx site definition for websockets.

    listen {{ domain_config.websockets_nginx_listen_port | default(6001) }}; #
    listen [::]:{{ domain_config.websockets_nginx_listen_port | default(6001) }}; #
    server_name {{ domain_config.domain }} www.{{ domain_config.domain }}{% if domain_config.extra_domains is defined %} {% for extra_domain in domain_config.extra_domains %}{{ extra_domain }} www.{{ extra_domain }}{% endfor %}{% endif %}; #

    access_log /var/www/{{ domain_config.domain }}/logs/websockets_access.log; #
    error_log /var/www/{{ domain_config.domain }}/logs/websockets_error.log warn; #

    location / { #
        proxy_pass             http://{{ domain_config.websockets_service_host | default('127.0.0.1') }}:{{ domain_config.websockets_service_port | default(6001) }}; #
        proxy_set_header Host  $host; #
        proxy_read_timeout     60; #
        proxy_connect_timeout  60; #
        proxy_redirect         off; #
        # Allow the use of websockets
        proxy_http_version 1.1; #
        proxy_set_header Upgrade $http_upgrade; #
        proxy_set_header Connection 'upgrade'; #
        # proxy_set_header Host $host; # Redundant, already set above
        proxy_cache_bypass $http_upgrade; #
    }
}

# SSL WebSockets Server (if SSL is enabled for this specific WebSocket port)
{% if domain_config.ssl_email is defined and domain_config.ssl_email != "" and domain_config.websockets_enable_ssl_on_dedicated_port | default(false) %} #
server {
    listen {{ domain_config.websockets_nginx_listen_port_ssl | default(domain_config.websockets_nginx_listen_port | default(6001)) }} ssl http2; #
    listen [::]:{{ domain_config.websockets_nginx_listen_port_ssl | default(domain_config.websockets_nginx_listen_port | default(6001)) }} ssl http2; #
    
    server_name {{ domain_config.domain }} www.{{ domain_config.domain }}{% if domain_config.extra_domains is defined %} {% for extra_domain in domain_config.extra_domains %}{{ extra_domain }} www.{{ extra_domain }}{% endfor %}{% endif %}; #

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/{{ domain_config.domain }}/fullchain.pem; #
    ssl_certificate_key /etc/letsencrypt/live/{{ domain_config.domain }}/privkey.pem; #
    ssl_trusted_certificate /etc/letsencrypt/live/{{ domain_config.domain }}/chain.pem; #
    ssl_protocols TLSv1.2 TLSv1.3; #
    ssl_prefer_server_ciphers on; #
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH; #
    ssl_session_cache shared:SSL:10m; #
    ssl_session_timeout 1d; #
    ssl_session_tickets off; #
    ssl_stapling on; #
    ssl_stapling_verify on; #
    resolver 8.8.8.8 8.8.4.4 valid=300s; #
    resolver_timeout 5s; #

    # Logs
    access_log /var/www/{{ domain_config.domain }}/logs/websockets_access.log; #
    error_log /var/www/{{ domain_config.domain }}/logs/websockets_error.log warn; #

    location / { #
        proxy_pass             http://{{ domain_config.websockets_service_host | default('127.0.0.1') }}:{{ domain_config.websockets_service_port | default(6001) }}; #
        proxy_set_header Host  $host; #
        proxy_read_timeout     60; #
        proxy_connect_timeout  60; #
        proxy_redirect         off; #
        # Allow the use of websockets
        proxy_http_version 1.1; #
        proxy_set_header Upgrade $http_upgrade; #
        proxy_set_header Connection 'upgrade'; #
        # proxy_set_header Host $host; # Redundant
        proxy_cache_bypass $http_upgrade; #
    }
}
{% endif %}