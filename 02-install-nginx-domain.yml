---
- hosts: all
  become: true
  vars:
    nginx_domain: "{{ domain_config.domain }}"
    nginx_php_version: "{{ domain_config.php_version | default(GLOBAL_DEFAULT_PHP_VERSION | default('8.2')) }}"
    nginx_enable_basic_auth: "{{ domain_config.enable_basic_auth | default(false) }}"
    nginx_basic_auth_user: "{{ domain_config.basic_auth_user | default('') }}"
    nginx_basic_auth_password: "{{ domain_config.basic_auth_password | default('') }}"
    nginx_arch: "amd64"

    # تعیین خودکار کدنام apt بر اساس نسخه اوبونتو
    nginx_apt_codename: >-
      {% set release = ansible_distribution_release | lower %}
      {% if release in ['noble', 'jammy'] %}
        jammy
      {% elif release in ['lunar'] %}
        lunar
      {% else %}
        {{ release }}
      {% endif %}

  tasks:
    - name: Create Nginx helper directory for domain {{ nginx_domain }}
      ansible.builtin.file:
        path: "/etc/nginx/sites-available/{{ nginx_domain }}helper"
        state: directory
        owner: root
        group: root
        mode: '0755'
      tags: ['nginx', 'config', 'domain_specific']

    - name: Copy Nginx helper configuration files for domain {{ nginx_domain }}
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "/etc/nginx/sites-available/{{ nginx_domain }}helper/{{ item.dest }}"
        mode: "{{ item.mode | default('0644') }}"
        owner: root
        group: root
      loop:
        - { src: 'templates/arvancloud-ip-sync.sh.j2', dest: 'arvancloud-ip-sync.sh', mode: '0755' }
        - { src: 'templates/cache.j2', dest: 'cache.conf' }
        - { src: 'templates/cloudflare-ip-sync.sh.j2', dest: 'cloudflare-ip-sync.sh', mode: '0755' }
        - { src: 'templates/cloudflare.j2', dest: 'cloudflare.conf' }
        - { src: 'templates/filemanager.j2', dest: 'filemanager.conf' }
        - { src: 'templates/general.j2', dest: 'general.conf' }
        - { src: 'templates/gzip.j2', dest: 'gzip.conf' }
        - { src: 'templates/keepalive.j2', dest: 'keepalive.conf' }
        - { src: 'templates/redirects.j2', dest: 'redirects.conf' }
        - { src: 'templates/securityheaders.j2', dest: 'securityheaders.conf' }
        - { src: 'templates/wordpress.j2', dest: 'wordpress.conf' }
      notify: Restart Nginx
      tags: ['nginx', 'config', 'domain_specific']

    - name: Install htpasswd utility (apache2-utils)
      ansible.builtin.apt:
        name: apache2-utils
        state: present
        update_cache: yes
      tags: ['nginx', 'utils', 'prerequisites']

    - name: Create .htpasswd file for Basic Authentication on {{ nginx_domain }}
      community.general.htpasswd:
        path: "/etc/nginx/sites-available/{{ nginx_domain }}helper/.htpasswd"
        name: "{{ nginx_basic_auth_user }}"
        password: "{{ nginx_basic_auth_password }}"
        owner: www-data
        group: root
        mode: '0640'
        state: present
      when: nginx_enable_basic_auth | bool and nginx_basic_auth_user and nginx_basic_auth_password
      notify: Restart Nginx
      tags: ['nginx', 'security', 'basic_auth', 'domain_specific']

    - name: Run Cloudflare IP sync script for {{ nginx_domain }} (if script exists)
      ansible.builtin.command: "/etc/nginx/sites-available/{{ nginx_domain }}helper/cloudflare-ip-sync.sh /etc/nginx/sites-available/{{ nginx_domain }}helper/cloudflare.conf"
      args:
        creates: "/etc/nginx/sites-available/{{ nginx_domain }}helper/cloudflare.conf"
      changed_when: false
      when: "lookup('file', '/etc/nginx/sites-available/{{ nginx_domain }}helper/cloudflare-ip-sync.sh', errors='ignore') is file"
      tags: ['nginx', 'cdn_sync', 'domain_specific']

    - name: Run ArvanCloud IP sync script for {{ nginx_domain }} (if script exists)
      ansible.builtin.command: "/etc/nginx/sites-available/{{ nginx_domain }}helper/arvancloud-ip-sync.sh /etc/nginx/sites-available/{{ nginx_domain }}helper/arvancloud.conf"
      args:
        creates: "/etc/nginx/sites-available/{{ nginx_domain }}helper/arvancloud.conf"
      changed_when: false
      when: "lookup('file', '/etc/nginx/sites-available/{{ nginx_domain }}helper/arvancloud-ip-sync.sh', errors='ignore') is file"
      tags: ['nginx', 'cdn_sync', 'domain_specific']

    - name: Create Nginx logs directory for domain {{ nginx_domain }}
      ansible.builtin.file:
        path: "/var/www/{{ nginx_domain }}/logs"
        state: directory
        owner: www-data
        group: www-data
        mode: '0775'
      tags: ['nginx', 'config', 'logging', 'domain_specific']

    - name: Create Nginx cache directory for domain {{ nginx_domain }}
      ansible.builtin.file:
        path: "/etc/nginx/cache/{{ nginx_domain }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'
      tags: ['nginx', 'config', 'cache', 'domain_specific']

    - name: Copy main Nginx site configuration for {{ nginx_domain }}
      ansible.builtin.template:
        src: "templates/nginx.conf.j2"
        dest: "/etc/nginx/sites-available/{{ nginx_domain }}.conf"
        mode: '0644'
        owner: root
        group: root
      notify: Restart Nginx
      tags: ['nginx', 'config', 'site_config', 'domain_specific']

    - name: Enable Nginx site for {{ nginx_domain }}
      ansible.builtin.file:
        src: "/etc/nginx/sites-available/{{ nginx_domain }}.conf"
        dest: "/etc/nginx/sites-enabled/{{ nginx_domain }}.conf"
        state: link
        owner: root
        group: root
      notify: Restart Nginx
      tags: ['nginx', 'config', 'site_enable', 'domain_specific']

  handlers:
    - name: Restart Nginx
      ansible.builtin.systemd:
        name: nginx
        state: restarted
