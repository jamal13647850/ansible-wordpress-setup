- hosts: all  
  become: true  

  tasks:  
    - name: Update package index  
      apt:  
        update_cache: yes  

    - name: Install required packages  
      apt:  
        name:  
          - software-properties-common  
          - python3-software-properties  
        state: present  

    - name: Add PHP repository  
      apt_repository:  
        repo: ppa:ondrej/php  
        state: present  
        update_cache: yes  

    - name: Install PHP {{ php_version }}  
      apt:  
        name:  
          - "php{{ php_version }}"  
          - "php{{ php_version }}-fpm"  
          - "php{{ php_version }}-common"  
          - "php{{ php_version }}-mysql"  
          - "php{{ php_version }}-xml"  
          - "php{{ php_version }}-xmlrpc"  
          - "php{{ php_version }}-curl"  
          - "php{{ php_version }}-gd"  
          - "php{{ php_version }}-imagick"  
          - "php{{ php_version }}-cli"  
          - "php{{ php_version }}-imap"  
          - "php{{ php_version }}-mbstring"  
          - "php{{ php_version }}-opcache"  
          - "php{{ php_version }}-soap"  
          - "php{{ php_version }}-zip"  
          - "php{{ php_version }}-intl"  
          - "php{{ php_version }}-bcmath"  
          - unzip  
        state: present  

    - name: Restart PHP-FPM  
      service:  
        name: "php{{ php_version }}-fpm"  
        state: restarted  

    - name: Update PHP configuration  
      lineinfile:  
        path: "/etc/php/{{ php_version }}/fpm/php.ini"  
        regexp: "{{ item.regexp }}"  
        line: "{{ item.line }}"  
      loop:  
        - { regexp: '^upload_max_filesize =', line: 'upload_max_filesize = 32M' }  
        - { regexp: '^post_max_size =', line: 'post_max_size = 48M' }  
        - { regexp: '^memory_limit =', line: 'memory_limit = 256M' }  
        - { regexp: '^max_execution_time =', line: 'max_execution_time = 600' }  
        - { regexp: '^max_input_vars =', line: 'max_input_vars = 3000' }  
        - { regexp: '^max_input_time =', line: 'max_input_time = 1000' }  

    - name: Install Composer  
      ansible.builtin.shell: |  
        curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer  
      args:  
        creates: /usr/local/bin/composer  
 

    - name: Install WP-CLI  
      get_url:  
        url: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar  
        dest: /usr/local/bin/wp  
        mode: '0755'  
        owner: root  
        group: root  