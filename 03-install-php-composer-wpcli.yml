# 03-install-php-composer-wpcli.yml
- hosts: all
  become: true
  vars:
    # Define effective PHP version for this run
    effective_php_version: "{{ domain_config.php_version | default(GLOBAL_PHP_DEFAULT_VERSION | default('8.2')) }}"

    # Define effective OPcache settings
    effective_enable_opcache: "{{ domain_config.enable_php_opcache | default(GLOBAL_ENABLE_PHP_OPCACHE | default(true)) }}"
    effective_opcache_memory: "{{ domain_config.opcache_memory | default(GLOBAL_OPCACHE_MEMORY | default('128M')) }}" # e.g., 128M or 256M

    # PHP INI settings with fallbacks (Global vars would be defined in group_vars/all.yml eventually)
    php_ini_settings_map:
      upload_max_filesize: "{{ domain_config.php_upload_max_filesize | default(GLOBAL_PHP_UPLOAD_MAX_FILESIZE | default('64M')) }}"
      post_max_size: "{{ domain_config.php_post_max_size | default(GLOBAL_PHP_POST_MAX_SIZE | default('64M')) }}"
      memory_limit: "{{ domain_config.php_memory_limit | default(GLOBAL_PHP_MEMORY_LIMIT | default('256M')) }}"
      max_execution_time: "{{ domain_config.php_max_execution_time | default(GLOBAL_PHP_MAX_EXECUTION_TIME | default('300')) }}"
      max_input_vars: "{{ domain_config.php_max_input_vars | default(GLOBAL_PHP_MAX_INPUT_VARS | default('3000')) }}"
      max_input_time: "{{ domain_config.php_max_input_time | default(GLOBAL_PHP_MAX_INPUT_TIME | default('300')) }}"

    opcache_ini_settings_map:
      opcache.enable: "1" # Generally, if effective_enable_opcache is true, this should be 1
      opcache.enable_cli: "1" # Often useful to enable for CLI too
      opcache.memory_consumption: "{{ effective_opcache_memory | regex_replace('M$', '') }}" # Remove 'M' if present, as ini often takes number
      opcache.interned_strings_buffer: "16" # Increased from 8
      opcache.max_accelerated_files: "10000"
      opcache.revalidate_freq: "2"
      opcache.save_comments: "1"
      opcache.fast_shutdown: "1"

  tasks:
    - name: Update APT package index
      ansible.builtin.apt:
        update_cache: yes
      tags: ['php', 'prerequisites', 'system']

    - name: Install common software properties support
      ansible.builtin.apt:
        name:
          - software-properties-common
          - python3-software-properties
        state: present
      tags: ['php', 'prerequisites', 'system']

    - name: Add Ondrej Sury PHP PPA for latest PHP versions
      ansible.builtin.apt_repository:
        repo: ppa:ondrej/php
        state: present
        update_cache: yes # Update cache after adding new repo
      tags: ['php', 'repo']

    - name: Install PHP version {{ effective_php_version }} and common extensions
      ansible.builtin.apt:
        name:
          - "php{{ effective_php_version }}"
          - "php{{ effective_php_version }}-fpm"
          - "php{{ effective_php_version }}-common"
          - "php{{ effective_php_version }}-mysql"
          - "php{{ effective_php_version }}-xml"
          - "php{{ effective_php_version }}-xmlrpc" # Often needed by WordPress
          - "php{{ effective_php_version }}-curl"
          - "php{{ effective_php_version }}-gd"
          - "php{{ effective_php_version }}-imagick"
          - "php{{ effective_php_version }}-cli"
          - "php{{ effective_php_version }}-imap"    # For email functionality
          - "php{{ effective_php_version }}-mbstring"
          - "php{{ effective_php_version }}-opcache"
          - "php{{ effective_php_version }}-soap"    # For SOAP APIs
          - "php{{ effective_php_version }}-zip"
          - "php{{ effective_php_version }}-intl"   # For internationalization
          - "php{{ effective_php_version }}-bcmath" # For precision math
          - "php{{ effective_php_version }}-gmp"    # For GMP math, sometimes needed by libraries
          - "php{{ effective_php_version }}-redis"  # If Redis is used for sessions/cache at PHP level
          - unzip # General utility
        state: present
      notify: Restart PHP-FPM service
      tags: ['php', 'install']

    - name: Update PHP-FPM configuration (php.ini) for {{ effective_php_version }}
      ansible.builtin.lineinfile:
        path: "/etc/php/{{ effective_php_version }}/fpm/php.ini"
        regexp: "^{{ item.key | regex_escape() }}\\s*=" # Ensure regexp is escaped and matches key followed by optional space and =
        line: "{{ item.key }} = {{ item.value }}"
        state: present
      loop: "{{ php_ini_settings_map | dict2items }}"
      loop_control:
        label: "{{ item.key }}"
      notify: Restart PHP-FPM service
      tags: ['php', 'config']

    - name: Configure PHP OPcache for {{ effective_php_version }}
      ansible.builtin.lineinfile:
        path: "/etc/php/{{ effective_php_version }}/fpm/conf.d/10-opcache.ini" # Default OPcache config file
        regexp: "^{{ item.key | regex_escape() }}\\s*="
        line: "{{ item.key }}={{ item.value }}"
        state: present
        create: false # Do not create if it doesn't exist, assume base opcache package creates it
      loop: "{{ opcache_ini_settings_map | dict2items }}"
      loop_control:
        label: "{{ item.key }}"
      when: effective_enable_opcache | bool
      notify: Restart PHP-FPM service
      tags: ['php', 'opcache', 'config']

    - name: Ensure PHP-FPM service for {{ effective_php_version }} is running and enabled
      ansible.builtin.systemd:
        name: "php{{ effective_php_version }}-fpm"
        state: started
        enabled: yes
      tags: ['php', 'service']

    - name: Install Composer (globally)
      ansible.builtin.shell: |
        curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
      args:
        creates: /usr/local/bin/composer # Makes the task idempotent
      changed_when: false # Shell module always reports changed unless specifically told not to. 'creates' handles idempotency.
      tags: ['composer', 'tools', 'system']

    - name: Install WP-CLI (globally)
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        dest: /usr/local/bin/wp
        mode: '0755'
        owner: root
        group: root
      tags: ['wpcli', 'tools', 'system']

  handlers:
    - name: Restart PHP-FPM service
      ansible.builtin.systemd: # Using systemd module for handler as well
        name: "php{{ effective_php_version }}-fpm"
        state: restarted
      listen: "Restart PHP-FPM service" # Explicit listener name