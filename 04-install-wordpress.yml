---
- hosts: all
  become: true
  tasks:
    - name: Ensure required variables are defined
      fail:
        msg: "Required variable '{{ item }}' is not defined."
      when: domain_config[item] is not defined
      loop:
        - domain
        - wordpress_admin_user
        - wordpress_admin_password
        - wordpress_admin_email
        - wordpress_title
        - wordpress_db_prefix
        - mysql_db_name

    - name: Create WordPress directory
      file:
        path: "/var/www/{{ domain_config.domain }}/html"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Download WordPress
      shell: wp core download --locale={{ domain_config.wordpress_locale | default('en_US') }} --allow-root
      args:
        chdir: "/var/www/{{ domain_config.domain }}/html"
        creates: "/var/www/{{ domain_config.domain }}/html/wp-config.php"

    - name: Copy wp-config.php template
      template:
        src: wp-config.php.j2
        dest: "/var/www/{{ domain_config.domain }}/html/wp-config.php"
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Install WordPress core
      shell: |
        wp core install \
          --url="https://{{ domain_config.domain }}" \
          --title="{{ domain_config.wordpress_title }}" \
          --admin_user="{{ domain_config.wordpress_admin_user }}" \
          --admin_password="{{ domain_config.wordpress_admin_password }}" \
          --admin_email="{{ domain_config.wordpress_admin_email }}" \
          --locale="{{ domain_config.wordpress_locale | default('en_US') }}" \
          --allow-root
      args:
        chdir: "/var/www/{{ domain_config.domain }}/html"
      register: wp_install
      failed_when: wp_install.rc != 0 and "WordPress is already installed" not in wp_install.stderr

    - name: Ensure WordPress ownership
      file:
        path: "/var/www/{{ domain_config.domain }}/html"
        owner: www-data
        group: www-data
        recurse: yes

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted